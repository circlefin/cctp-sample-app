/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
  TokenMessengerWithMetadata,
  TokenMessengerWithMetadataInterface,
} from '../TokenMessengerWithMetadata'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenMessenger',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_domainNumber',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_domainRecipient',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'metadataNonce',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'DepositForBurnMetadata',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'channel',
        type: 'uint64',
      },
      {
        internalType: 'bytes32',
        name: 'destinationBech32Prefix',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'destinationRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'mintRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'burnToken',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'memo',
        type: 'bytes',
      },
    ],
    name: 'depositForBurn',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'channel',
        type: 'uint64',
      },
      {
        internalType: 'bytes32',
        name: 'destinationBech32Prefix',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'destinationRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'mintRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'burnToken',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'destinationCaller',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'memo',
        type: 'bytes',
      },
    ],
    name: 'depositForBurnWithCaller',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainNumber',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainRecipient',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'messageTransmitter',
    outputs: [
      {
        internalType: 'contract MessageTransmitter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'mintRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'burnToken',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'rawDepositForBurn',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'mintRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'burnToken',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'destinationCaller',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'rawDepositForBurnWithCaller',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenMessenger',
    outputs: [
      {
        internalType: 'contract TokenMessenger',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

export class TokenMessengerWithMetadata__factory {
  static readonly abi = _abi
  static createInterface(): TokenMessengerWithMetadataInterface {
    return new utils.Interface(_abi) as TokenMessengerWithMetadataInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMessengerWithMetadata {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenMessengerWithMetadata
  }
}
